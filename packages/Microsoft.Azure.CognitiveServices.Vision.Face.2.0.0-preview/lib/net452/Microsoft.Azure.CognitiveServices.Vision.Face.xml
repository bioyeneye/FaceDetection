<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.CognitiveServices.Vision.Face</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.ApiKeyServiceClientCredentials">
            <summary>
            Allows authentication to the API using a basic apiKey mechanism
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.ApiKeyServiceClientCredentials.#ctor(System.String)">
            <summary>
            Creates a new instance of the ApiKeyServiceClientCredentails class
            </summary>
            <param name="subscriptionKey">The subscription key to authenticate and authorize as</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.ApiKeyServiceClientCredentials.ProcessHttpRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Add the Basic Authentication Header to each outgoing request
            </summary>
            <param name="request">The outgoing request</param>
            <param name="cancellationToken">A token to cancel the operation</param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient">
            <summary>
            An API for face detection, verification, and identification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.Credentials">
            <summary>
            Subscription credentials which uniquely identify client subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.Face">
            <summary>
            Gets the IFaceOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.PersonGroupPerson">
            <summary>
            Gets the IPersonGroupPerson.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.PersonGroup">
            <summary>
            Gets the IPersonGroupOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.FaceList">
            <summary>
            Gets the IFaceListOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the FaceClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Subscription credentials which uniquely identify client subscription.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations">
            <summary>
            FaceListOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient)">
            <summary>
            Initializes a new instance of the FaceListOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.Client">
            <summary>
            Gets a reference to the FaceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create an empty face list. Up to 64 face lists are allowed to exist in one
            subscription.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a face list's information.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update information of a face list.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing face list according to faceListId. Persisted face images
            in the face list will also be deleted.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about all existing face lists. Only faceListId, name
            and userData will be returned.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.DeleteFaceWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing face from a face list (given by a persisitedFaceId and a
            faceListId). Persisted image related to the face will also be deleted.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.AddFaceFromUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image with a
            targetFace rectangle. It returns a persistedFaceId representing the added
            face, and persistedFaceId will not expire.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperations.AddFaceFromStreamWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image with a
            targetFace rectangle. It returns a persistedFaceId representing the added
            face, and persistedFaceId will not expire.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions">
            <summary>
            Extension methods for FaceListOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.CreateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create an empty face list. Up to 64 face lists are allowed to exist in one
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.GetAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a face list's information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.UpdateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update information of a face list.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.DeleteAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an existing face list according to faceListId. Persisted face images
            in the face list will also be deleted.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.ListAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about all existing face lists. Only faceListId, name
            and userData will be returned.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.DeleteFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an existing face from a face list (given by a persisitedFaceId and a
            faceListId). Persisted image related to the face will also be deleted.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.AddFaceFromUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image with a
            targetFace rectangle. It returns a persistedFaceId representing the added
            face, and persistedFaceId will not expire.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceListOperationsExtensions.AddFaceFromStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations,System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image with a
            targetFace rectangle. It returns a persistedFaceId representing the added
            face, and persistedFaceId will not expire.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations">
            <summary>
            FaceOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient)">
            <summary>
            Initializes a new instance of the FaceOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.Client">
            <summary>
            Gets a reference to the FaceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.FindSimilarWithHttpMessagesAsync(System.Guid,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Given query face's faceId, find the similar-looking faces from a faceId
            array or a faceListId.
            </summary>
            <param name='faceId'>
            FaceId of the query face. User needs to call Face - Detect first to get a
            valid faceId. Note that this faceId is not persisted and will expire 24
            hours after the detection call
            </param>
            <param name='faceListId'>
            An existing user-specified unique candidate face list, created in Face List
            - Create a Face List. Face list contains a set of persistedFaceIds which
            are persisted and will never expire. Parameter faceListId and faceIds
            should not be provided at the same time
            </param>
            <param name='faceIds'>
            An array of candidate faceIds. All of them are created by Face - Detect and
            the faceIds will expire 24 hours after the detection call.
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The number of top similar faces returned. The valid range is [1, 1000].
            </param>
            <param name='mode'>
            Similar face searching mode. It can be "matchPerson" or "matchFace".
            Possible values include: 'matchPerson', 'matchFace'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.GroupWithHttpMessagesAsync(System.Collections.Generic.IList{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Divide candidate faces into groups based on face similarity.
            </summary>
            <param name='faceIds'>
            Array of candidate faceId created by Face - Detect. The maximum is 1000
            faces
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.IdentifyWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Double},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Identify unknown faces from a person group.
            </summary>
            <param name='personGroupId'>
            PersonGroupId of the target person group, created by PersonGroups.Create
            </param>
            <param name='faceIds'>
            Array of query faces faceIds, created by the Face - Detect. Each of the
            faces are identified independently. The valid number of faceIds is between
            [1, 10].
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).
            </param>
            <param name='confidenceThreshold'>
            Confidence threshold of identification, used to judge whether one face
            belong to one person. The range of confidenceThreshold is [0, 1] (default
            specified by algorithm).
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.VerifyFaceToFaceWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person or whether one face
            belongs to a person.
            </summary>
            <param name='faceId1'>
            FaceId of the first face, comes from Face - Detect
            </param>
            <param name='faceId2'>
            FaceId of the second face, comes from Face - Detect
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.DetectWithUrlWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.VerifyFaceToPersonWithHttpMessagesAsync(System.Guid,System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person. Compares a face Id with a
            Person Id
            </summary>
            <param name='faceId'>
            FaceId the face, comes from Face - Detect
            </param>
            <param name='personGroupId'>
            Using existing personGroupId and personId for fast loading a specified
            person. personGroupId is created in Person Groups.Create.
            </param>
            <param name='personId'>
            Specify a certain person in a person group. personId is created in
            Persons.Create.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperations.DetectWithStreamWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
            <param name='image'>
            An image stream.
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions">
            <summary>
            Extension methods for FaceOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.FindSimilarAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Threading.CancellationToken)">
            <summary>
            Given query face's faceId, find the similar-looking faces from a faceId
            array or a faceListId.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceId'>
            FaceId of the query face. User needs to call Face - Detect first to get a
            valid faceId. Note that this faceId is not persisted and will expire 24
            hours after the detection call
            </param>
            <param name='faceListId'>
            An existing user-specified unique candidate face list, created in Face List
            - Create a Face List. Face list contains a set of persistedFaceIds which
            are persisted and will never expire. Parameter faceListId and faceIds
            should not be provided at the same time
            </param>
            <param name='faceIds'>
            An array of candidate faceIds. All of them are created by Face - Detect and
            the faceIds will expire 24 hours after the detection call.
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The number of top similar faces returned. The valid range is [1, 1000].
            </param>
            <param name='mode'>
            Similar face searching mode. It can be "matchPerson" or "matchFace".
            Possible values include: 'matchPerson', 'matchFace'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.GroupAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Collections.Generic.IList{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Divide candidate faces into groups based on face similarity.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceIds'>
            Array of candidate faceId created by Face - Detect. The maximum is 1000
            faces
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.IdentifyAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Collections.Generic.IList{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Identify unknown faces from a person group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            PersonGroupId of the target person group, created by PersonGroups.Create
            </param>
            <param name='faceIds'>
            Array of query faces faceIds, created by the Face - Detect. Each of the
            faces are identified independently. The valid number of faceIds is between
            [1, 10].
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The range of maxNumOfCandidatesReturned is between 1 and 5 (default is 1).
            </param>
            <param name='confidenceThreshold'>
            Confidence threshold of identification, used to judge whether one face
            belong to one person. The range of confidenceThreshold is [0, 1] (default
            specified by algorithm).
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person or whether one face
            belongs to a person.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceId1'>
            FaceId of the first face, comes from Face - Detect
            </param>
            <param name='faceId2'>
            FaceId of the second face, comes from Face - Detect
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.VerifyFaceToPersonAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.Guid,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person. Compares a face Id with a
            Person Id
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='faceId'>
            FaceId the face, comes from Face - Detect
            </param>
            <param name='personGroupId'>
            Using existing personGroupId and personId for fast loading a specified
            person. personGroupId is created in Person Groups.Create.
            </param>
            <param name='personId'>
            Specify a certain person in a person group. personId is created in
            Persons.Create.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.FaceOperationsExtensions.DetectWithStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations,System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and optionally
            with faceIds, landmarks, and attributes.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of detected
            faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of the
            detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender". Supported
            face attributes include age, gender, headPose, smile, facialHair, glasses
            and emotion. Note that each face attribute analysis has additional
            computational and time cost.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient">
            <summary>
            An API for face detection, verification, and identification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.Credentials">
            <summary>
            Subscription credentials which uniquely identify client
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.Face">
            <summary>
            Gets the IFaceOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.PersonGroupPerson">
            <summary>
            Gets the IPersonGroupPerson.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.PersonGroup">
            <summary>
            Gets the IPersonGroupOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceClient.FaceList">
            <summary>
            Gets the IFaceListOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations">
            <summary>
            FaceListOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create an empty face list. Up to 64 face lists are allowed to exist
            in one subscription.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a face list's information.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update information of a face list.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing face list according to faceListId. Persisted
            face images in the face list will also be deleted.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about all existing face lists. Only
            faceListId, name and userData will be returned.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.DeleteFaceWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing face from a face list (given by a
            persisitedFaceId and a faceListId). Persisted image related to the
            face will also be deleted.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromUrlWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image
            with a targetFace rectangle. It returns a persistedFaceId
            representing the added face, and persistedFaceId will not expire.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceListOperations.AddFaceFromStreamWithHttpMessagesAsync(System.String,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a face to a face list. The input face is specified as an image
            with a targetFace rectangle. It returns a persistedFaceId
            representing the added face, and persistedFaceId will not expire.
            </summary>
            <param name='faceListId'>
            Id referencing a particular face list.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations">
            <summary>
            FaceOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.FindSimilarWithHttpMessagesAsync(System.Guid,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Given query face's faceId, find the similar-looking faces from a
            faceId array or a faceListId.
            </summary>
            <param name='faceId'>
            FaceId of the query face. User needs to call Face - Detect first to
            get a valid faceId. Note that this faceId is not persisted and will
            expire 24 hours after the detection call
            </param>
            <param name='faceListId'>
            An existing user-specified unique candidate face list, created in
            Face List - Create a Face List. Face list contains a set of
            persistedFaceIds which are persisted and will never expire.
            Parameter faceListId and faceIds should not be provided at the same
            time
            </param>
            <param name='faceIds'>
            An array of candidate faceIds. All of them are created by Face -
            Detect and the faceIds will expire 24 hours after the detection
            call.
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The number of top similar faces returned. The valid range is [1,
            1000].
            </param>
            <param name='mode'>
            Similar face searching mode. It can be "matchPerson" or
            "matchFace". Possible values include: 'matchPerson', 'matchFace'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.GroupWithHttpMessagesAsync(System.Collections.Generic.IList{System.Guid},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Divide candidate faces into groups based on face similarity.
            </summary>
            <param name='faceIds'>
            Array of candidate faceId created by Face - Detect. The maximum is
            1000 faces
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.IdentifyWithHttpMessagesAsync(System.String,System.Collections.Generic.IList{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Double},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Identify unknown faces from a person group.
            </summary>
            <param name='personGroupId'>
            PersonGroupId of the target person group, created by
            PersonGroups.Create
            </param>
            <param name='faceIds'>
            Array of query faces faceIds, created by the Face - Detect. Each of
            the faces are identified independently. The valid number of faceIds
            is between [1, 10].
            </param>
            <param name='maxNumOfCandidatesReturned'>
            The range of maxNumOfCandidatesReturned is between 1 and 5 (default
            is 1).
            </param>
            <param name='confidenceThreshold'>
            Confidence threshold of identification, used to judge whether one
            face belong to one person. The range of confidenceThreshold is [0,
            1] (default specified by algorithm).
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.VerifyFaceToFaceWithHttpMessagesAsync(System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person or whether one
            face belongs to a person.
            </summary>
            <param name='faceId1'>
            FaceId of the first face, comes from Face - Detect
            </param>
            <param name='faceId2'>
            FaceId of the second face, comes from Face - Detect
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.DetectWithUrlWithHttpMessagesAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and
            optionally with faceIds, landmarks, and attributes.
            </summary>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of
            detected faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of
            the detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender".
            Supported face attributes include age, gender, headPose, smile,
            facialHair, glasses and emotion. Note that each face attribute
            analysis has additional computational and time cost.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.VerifyFaceToPersonWithHttpMessagesAsync(System.Guid,System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Verify whether two faces belong to a same person. Compares a face
            Id with a Person Id
            </summary>
            <param name='faceId'>
            FaceId the face, comes from Face - Detect
            </param>
            <param name='personGroupId'>
            Using existing personGroupId and personId for fast loading a
            specified person. personGroupId is created in Person Groups.Create.
            </param>
            <param name='personId'>
            Specify a certain person in a person group. personId is created in
            Persons.Create.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IFaceOperations.DetectWithStreamWithHttpMessagesAsync(System.IO.Stream,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Detect human faces in an image and returns face locations, and
            optionally with faceIds, landmarks, and attributes.
            </summary>
            <param name='image'>
            An image stream.
            </param>
            <param name='returnFaceId'>
            A value indicating whether the operation should return faceIds of
            detected faces.
            </param>
            <param name='returnFaceLandmarks'>
            A value indicating whether the operation should return landmarks of
            the detected faces.
            </param>
            <param name='returnFaceAttributes'>
            Analyze and return the one or more specified face attributes in the
            comma-separated string like "returnFaceAttributes=age,gender".
            Supported face attributes include age, gender, headPose, smile,
            facialHair, glasses and emotion. Note that each face attribute
            analysis has additional computational and time cost.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations">
            <summary>
            PersonGroupOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a new person group with specified personGroupId, name and
            user-provided userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing person group. Persisted face images of all
            people in the person group will also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve the information of a person group, including its name and
            userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing person group's display name and userData. The
            properties which does not appear in request body will not be
            updated.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.GetTrainingStatusWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve the training status of a person group (completed or
            ongoing).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List person groups and their information.
            </summary>
            <param name='start'>
            List person groups from the least personGroupId greater than the
            "start".
            </param>
            <param name='top'>
            The number of person groups to list.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations.TrainWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queue a person group training task, the training task may not be
            started immediately.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson">
            <summary>
            PersonGroupPerson operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a new person in a specified person group.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all persons in a person group, and retrieve person information
            (including personId, name, userData and persistedFaceIds of
            registered faces of the person).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='start'>
            Starting person id to return (used to list a range of persons).
            </param>
            <param name='top'>
            Number of persons to return starting with the person id indicated
            by the 'start' parameter.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.DeleteWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing person from a person group. Persisted face
            images of the person will also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.GetWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a person's information, including registered persisted
            faces, name and userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.UpdateWithHttpMessagesAsync(System.String,System.Guid,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update name or userData of a person.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.DeleteFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a face from a person. Relative image for the persisted face
            will also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.GetFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a persisted face (specified by
            persistedFaceId, personId and its belonging personGroupId).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.UpdateFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update a person persisted face's userData field.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='userData'>
            User-provided data attached to the face. The size limit is 1KB.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.AddPersonFaceFromUrlWithHttpMessagesAsync(System.String,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input
            face is specified as an image with a targetFace rectangle.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson.AddPersonFaceFromStreamWithHttpMessagesAsync(System.String,System.Guid,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input
            face is specified as an image with a targetFace rectangle.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum
            length is 1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person
            in the format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the
            image, targetFace is required to specify which face to add. No
            targetFace means there is only one face detected in the entire
            image.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory">
            <summary>
            Accessory item and corresponding confidence level.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory.#ctor">
            <summary>
            Initializes a new instance of the Accessory class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.AccessoryType,System.Double)">
            <summary>
            Initializes a new instance of the Accessory class.
            </summary>
            <param name="type">Type of an accessory. Possible values include:
            'headWear', 'glasses', 'mask'</param>
            <param name="confidence">Confidence level of an accessory</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory.Type">
            <summary>
            Gets or sets type of an accessory. Possible values include:
            'headWear', 'glasses', 'mask'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory.Confidence">
            <summary>
            Gets or sets confidence level of an accessory
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.AccessoryType">
            <summary>
            Defines values for AccessoryType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIError">
            <summary>
            Error information returned by the API
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIError.#ctor">
            <summary>
            Initializes a new instance of the APIError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIError.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error)">
            <summary>
            Initializes a new instance of the APIError class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIError.Error">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            <summary>
            Exception thrown for an invalid response with APIError information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.#ctor">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the APIErrorException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur">
            <summary>
            Properties describing any presence of blur within the image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur.#ctor">
            <summary>
            Initializes a new instance of the Blur class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.BlurLevel,System.Double)">
            <summary>
            Initializes a new instance of the Blur class.
            </summary>
            <param name="blurLevel">An enum value indicating level of
            blurriness. Possible values include: 'Low', 'Medium',
            'High'</param>
            <param name="value">A number indicating level of blurriness ranging
            from 0 to 1.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur.BlurLevel">
            <summary>
            Gets or sets an enum value indicating level of blurriness. Possible
            values include: 'Low', 'Medium', 'High'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur.Value">
            <summary>
            Gets or sets a number indicating level of blurriness ranging from 0
            to 1.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.BlurLevel">
            <summary>
            Defines values for BlurLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate">
            <summary>
            Coordinates within an image
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate.#ctor">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Coordinate class.
            </summary>
            <param name="x">The horizontal component, in pixels.</param>
            <param name="y">The vertical component, in pixels.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate.X">
            <summary>
            Gets or sets the horizontal component, in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate.Y">
            <summary>
            Gets or sets the vertical component, in pixels.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace">
            <summary>
            Detected Face object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.#ctor">
            <summary>
            Initializes a new instance of the DetectedFace class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle,System.Nullable{System.Guid},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks,Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes)">
            <summary>
            Initializes a new instance of the DetectedFace class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.FaceId">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.FaceRectangle">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.FaceLandmarks">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.FaceAttributes">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.DetectedFace.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion">
            <summary>
            Properties describing facial emotion in form of confidence ranging from
            0 to 1.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.#ctor">
            <summary>
            Initializes a new instance of the Emotion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Emotion class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Anger">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Contempt">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Disgust">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Fear">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Happiness">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Neutral">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Sadness">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion.Surprise">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error">
            <summary>
            Error body.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error.#ctor">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Error class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error.Code">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Error.Message">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure">
            <summary>
            Properties describing exposure level of the image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure.#ctor">
            <summary>
            Initializes a new instance of the Exposure class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.ExposureLevel,System.Double)">
            <summary>
            Initializes a new instance of the Exposure class.
            </summary>
            <param name="exposureLevel">An enum value indicating level of
            exposure. Possible values include: 'UnderExposure', 'GoodExposure',
            'OverExposure'</param>
            <param name="value">A number indicating level of exposure level
            ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is
            good exposure. [0.75, 1] is over exposure.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure.ExposureLevel">
            <summary>
            Gets or sets an enum value indicating level of exposure. Possible
            values include: 'UnderExposure', 'GoodExposure', 'OverExposure'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure.Value">
            <summary>
            Gets or sets a number indicating level of exposure level ranging
            from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good
            exposure. [0.75, 1] is over exposure.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.ExposureLevel">
            <summary>
            Defines values for ExposureLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes">
            <summary>
            Face Attributes
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.#ctor">
            <summary>
            Initializes a new instance of the FaceAttributes class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.#ctor(System.Nullable{System.Double},System.Nullable{Microsoft.Azure.CognitiveServices.Vision.Face.Models.Gender},System.Nullable{System.Double},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair,System.Nullable{Microsoft.Azure.CognitiveServices.Vision.Face.Models.GlassesType},Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Emotion,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.Accessory},Microsoft.Azure.CognitiveServices.Vision.Face.Models.Blur,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Exposure,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise)">
            <summary>
            Initializes a new instance of the FaceAttributes class.
            </summary>
            <param name="age">Age in years</param>
            <param name="gender">Possible gender of the face. Possible values
            include: 'male', 'female', 'genderless'</param>
            <param name="smile">Smile intensity, a number between [0,1]
            </param>
            <param name="facialHair">Properties describing facial hair
            attributes.</param>
            <param name="glasses">Glasses type if any of the face. Possible
            values include: 'noGlasses', 'readingGlasses', 'sunglasses',
            'swimmingGoggles'</param>
            <param name="headPose">Properties indicating head pose of the
            face.</param>
            <param name="emotion">Properties describing facial emotion in form
            of confidence ranging from 0 to 1.</param>
            <param name="hair">Properties describing hair attributes.</param>
            <param name="makeup">Properties describing present makeups on a
            given face.</param>
            <param name="occlusion">Properties describing occlusions on a given
            face.</param>
            <param name="accessories">Properties describing any accessories on
            a given face.</param>
            <param name="blur">Properties describing any presence of blur
            within the image.</param>
            <param name="exposure">Properties describing exposure level of the
            image.</param>
            <param name="noise">Properties describing noise level of the
            image.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Age">
            <summary>
            Gets or sets age in years
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Gender">
            <summary>
            Gets or sets possible gender of the face. Possible values include:
            'male', 'female', 'genderless'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Smile">
            <summary>
            Gets or sets smile intensity, a number between [0,1]
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.FacialHair">
            <summary>
            Gets or sets properties describing facial hair attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Glasses">
            <summary>
            Gets or sets glasses type if any of the face. Possible values
            include: 'noGlasses', 'readingGlasses', 'sunglasses',
            'swimmingGoggles'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.HeadPose">
            <summary>
            Gets or sets properties indicating head pose of the face.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Emotion">
            <summary>
            Gets or sets properties describing facial emotion in form of
            confidence ranging from 0 to 1.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Hair">
            <summary>
            Gets or sets properties describing hair attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Makeup">
            <summary>
            Gets or sets properties describing present makeups on a given face.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Occlusion">
            <summary>
            Gets or sets properties describing occlusions on a given face.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Accessories">
            <summary>
            Gets or sets properties describing any accessories on a given face.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Blur">
            <summary>
            Gets or sets properties describing any presence of blur within the
            image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Exposure">
            <summary>
            Gets or sets properties describing exposure level of the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributes.Noise">
            <summary>
            Gets or sets properties describing noise level of the image.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceAttributeType">
            <summary>
            Defines values for FaceAttributeType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks">
            <summary>
            A collection of 27-point face landmarks pointing to the important
            positions of face components.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.#ctor">
            <summary>
            Initializes a new instance of the FaceLandmarks class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate,Microsoft.Azure.CognitiveServices.Vision.Face.Models.Coordinate)">
            <summary>
            Initializes a new instance of the FaceLandmarks class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.PupilLeft">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.PupilRight">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseTip">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.MouthLeft">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.MouthRight">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyebrowLeftOuter">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyebrowLeftInner">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeLeftOuter">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeLeftTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeLeftBottom">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeLeftInner">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyebrowRightInner">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyebrowRightOuter">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeRightInner">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeRightTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeRightBottom">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.EyeRightOuter">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseRootLeft">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseRootRight">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseLeftAlarTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseRightAlarTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseLeftAlarOutTip">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.NoseRightAlarOutTip">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.UpperLipTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.UpperLipBottom">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.UnderLipTop">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.UnderLipBottom">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceLandmarks.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList">
            <summary>
            Face list object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList.#ctor">
            <summary>
            Initializes a new instance of the FaceList class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace})">
            <summary>
            Initializes a new instance of the FaceList class.
            </summary>
            <param name="faceListId">FaceListId of the target face
            list.</param>
            <param name="name">User defined name, maximum length is
            128.</param>
            <param name="userData">User specified data. Length should not
            exceed 16KB.</param>
            <param name="persistedFaces">Persisted faces within the face
            list.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList.FaceListId">
            <summary>
            Gets or sets faceListId of the target face list.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList.PersistedFaces">
            <summary>
            Gets or sets persisted faces within the face list.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceList.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle">
            <summary>
            A rectangle within which a face can be found
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.#ctor">
            <summary>
            Initializes a new instance of the FaceRectangle class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FaceRectangle class.
            </summary>
            <param name="width">The width of the rectangle, in pixels.</param>
            <param name="height">The height of the rectangle, in
            pixels.</param>
            <param name="left">The distance from the left edge if the image to
            the left edge of the rectangle, in pixels.</param>
            <param name="top">The distance from the top edge if the image to
            the top edge of the rectangle, in pixels.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.Width">
            <summary>
            Gets or sets the width of the rectangle, in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.Height">
            <summary>
            Gets or sets the height of the rectangle, in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.Left">
            <summary>
            Gets or sets the distance from the left edge if the image to the
            left edge of the rectangle, in pixels.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.Top">
            <summary>
            Gets or sets the distance from the top edge if the image to the top
            edge of the rectangle, in pixels.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FaceRectangle.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair">
            <summary>
            Properties describing facial hair attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair.#ctor">
            <summary>
            Initializes a new instance of the FacialHair class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the FacialHair class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair.Moustache">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair.Beard">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FacialHair.Sideburns">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode">
            <summary>
            Defines values for FindSimilarMatchMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest">
            <summary>
            Request body for find similar operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.#ctor">
            <summary>
            Initializes a new instance of the FindSimilarRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.#ctor(System.Guid,System.String,System.Collections.Generic.IList{System.Nullable{System.Guid}},System.Nullable{System.Int32},Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarMatchMode)">
            <summary>
            Initializes a new instance of the FindSimilarRequest class.
            </summary>
            <param name="faceId">FaceId of the query face. User needs to call
            Face - Detect first to get a valid faceId. Note that this faceId is
            not persisted and will expire 24 hours after the detection
            call</param>
            <param name="faceListId">An existing user-specified unique
            candidate face list, created in Face List - Create a Face List.
            Face list contains a set of persistedFaceIds which are persisted
            and will never expire. Parameter faceListId and faceIds should not
            be provided at the same time</param>
            <param name="faceIds">An array of candidate faceIds. All of them
            are created by Face - Detect and the faceIds will expire 24 hours
            after the detection call.</param>
            <param name="maxNumOfCandidatesReturned">The number of top similar
            faces returned. The valid range is [1, 1000].</param>
            <param name="mode">Similar face searching mode. It can be
            "matchPerson" or "matchFace". Possible values include:
            'matchPerson', 'matchFace'</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.FaceId">
            <summary>
            Gets or sets faceId of the query face. User needs to call Face -
            Detect first to get a valid faceId. Note that this faceId is not
            persisted and will expire 24 hours after the detection call
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.FaceListId">
            <summary>
            Gets or sets an existing user-specified unique candidate face list,
            created in Face List - Create a Face List. Face list contains a set
            of persistedFaceIds which are persisted and will never expire.
            Parameter faceListId and faceIds should not be provided at the same
            time
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.FaceIds">
            <summary>
            Gets or sets an array of candidate faceIds. All of them are created
            by Face - Detect and the faceIds will expire 24 hours after the
            detection call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.MaxNumOfCandidatesReturned">
            <summary>
            Gets or sets the number of top similar faces returned. The valid
            range is [1, 1000].
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.Mode">
            <summary>
            Gets or sets similar face searching mode. It can be "matchPerson"
            or "matchFace". Possible values include: 'matchPerson', 'matchFace'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.FindSimilarRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Gender">
            <summary>
            Defines values for Gender.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GlassesType">
            <summary>
            Defines values for GlassesType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupRequest">
            <summary>
            Request body for group request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupRequest.#ctor">
            <summary>
            Initializes a new instance of the GroupRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupRequest.#ctor(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Initializes a new instance of the GroupRequest class.
            </summary>
            <param name="faceIds">Array of candidate faceId created by Face -
            Detect. The maximum is 1000 faces</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupRequest.FaceIds">
            <summary>
            Gets or sets array of candidate faceId created by Face - Detect.
            The maximum is 1000 faces
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult">
            <summary>
            An array of face groups based on face similarity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult.#ctor">
            <summary>
            Initializes a new instance of the GroupResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult.#ctor(System.Collections.Generic.IList{System.Collections.Generic.IList{System.Guid}},System.Collections.Generic.IList{System.Guid})">
            <summary>
            Initializes a new instance of the GroupResult class.
            </summary>
            <param name="groups">A partition of the original faces based on
            face similarity. Groups are ranked by number of faces</param>
            <param name="messyGroup">Face ids array of faces that cannot find
            any similar faces from original faces.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult.Groups">
            <summary>
            Gets or sets a partition of the original faces based on face
            similarity. Groups are ranked by number of faces
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult.MessyGroup">
            <summary>
            Gets or sets face ids array of faces that cannot find any similar
            faces from original faces.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.GroupResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair">
            <summary>
            Properties describing hair attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair.#ctor">
            <summary>
            Initializes a new instance of the Hair class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair.#ctor(System.Double,System.Boolean,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor})">
            <summary>
            Initializes a new instance of the Hair class.
            </summary>
            <param name="bald">A number describing confidence level of whether
            the person is bald.</param>
            <param name="invisible">A boolean value describing whether the hair
            is visible in the image.</param>
            <param name="hairColor">An array of candidate colors and confidence
            level in the presence of each.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair.Bald">
            <summary>
            Gets or sets a number describing confidence level of whether the
            person is bald.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair.Invisible">
            <summary>
            Gets or sets a boolean value describing whether the hair is visible
            in the image.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Hair.HairColor">
            <summary>
            Gets or sets an array of candidate colors and confidence level in
            the presence of each.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor">
            <summary>
            Hair color and associated confidence
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor.#ctor">
            <summary>
            Initializes a new instance of the HairColor class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColorType,System.Double)">
            <summary>
            Initializes a new instance of the HairColor class.
            </summary>
            <param name="color">Name of the hair color. Possible values
            include: 'unknown', 'white', 'gray', 'blond', 'brown', 'red',
            'black', 'other'</param>
            <param name="confidence">Confidence level of the color</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor.Color">
            <summary>
            Gets or sets name of the hair color. Possible values include:
            'unknown', 'white', 'gray', 'blond', 'brown', 'red', 'black',
            'other'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColor.Confidence">
            <summary>
            Gets or sets confidence level of the color
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HairColorType">
            <summary>
            Defines values for HairColorType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose">
            <summary>
            Properties indicating head pose of the face.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose.#ctor">
            <summary>
            Initializes a new instance of the HeadPose class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the HeadPose class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose.Roll">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose.Yaw">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.HeadPose.Pitch">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate">
            <summary>
            All possible faces that may qualify.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate.#ctor">
            <summary>
            Initializes a new instance of the IdentifyCandidate class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate.#ctor(System.Guid,System.Double)">
            <summary>
            Initializes a new instance of the IdentifyCandidate class.
            </summary>
            <param name="personId">Id of candidate</param>
            <param name="confidence">Confidence threshold of identification,
            used to judge whether one face belong to one person. The range of
            confidenceThreshold is [0, 1] (default specified by
            algorithm).</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate.PersonId">
            <summary>
            Gets or sets id of candidate
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate.Confidence">
            <summary>
            Gets or sets confidence threshold of identification, used to judge
            whether one face belong to one person. The range of
            confidenceThreshold is [0, 1] (default specified by algorithm).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest">
            <summary>
            Request body for identify face operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.#ctor">
            <summary>
            Initializes a new instance of the IdentifyRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.#ctor(System.String,System.Collections.Generic.IList{System.Guid},System.Nullable{System.Int32},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the IdentifyRequest class.
            </summary>
            <param name="personGroupId">PersonGroupId of the target person
            group, created by PersonGroups.Create</param>
            <param name="faceIds">Array of query faces faceIds, created by the
            Face - Detect. Each of the faces are identified independently. The
            valid number of faceIds is between [1, 10].</param>
            <param name="maxNumOfCandidatesReturned">The range of
            maxNumOfCandidatesReturned is between 1 and 5 (default is
            1).</param>
            <param name="confidenceThreshold">Confidence threshold of
            identification, used to judge whether one face belong to one
            person. The range of confidenceThreshold is [0, 1] (default
            specified by algorithm).</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.PersonGroupId">
            <summary>
            Gets or sets personGroupId of the target person group, created by
            PersonGroups.Create
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.FaceIds">
            <summary>
            Gets or sets array of query faces faceIds, created by the Face -
            Detect. Each of the faces are identified independently. The valid
            number of faceIds is between [1, 10].
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.MaxNumOfCandidatesReturned">
            <summary>
            Gets or sets the range of maxNumOfCandidatesReturned is between 1
            and 5 (default is 1).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.ConfidenceThreshold">
            <summary>
            Gets or sets confidence threshold of identification, used to judge
            whether one face belong to one person. The range of
            confidenceThreshold is [0, 1] (default specified by algorithm).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult">
            <summary>
            Response body for identify face operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult.#ctor">
            <summary>
            Initializes a new instance of the IdentifyResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult.#ctor(System.Guid,System.Collections.Generic.IList{Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyCandidate})">
            <summary>
            Initializes a new instance of the IdentifyResult class.
            </summary>
            <param name="faceId">FaceId of the query face</param>
            <param name="candidates">Identified person candidates for that face
            (ranked by confidence). Array size should be no larger than input
            maxNumOfCandidatesReturned. If no person is identified, will return
            an empty array.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult.FaceId">
            <summary>
            Gets or sets faceId of the query face
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult.Candidates">
            <summary>
            Gets or sets identified person candidates for that face (ranked by
            confidence). Array size should be no larger than input
            maxNumOfCandidatesReturned. If no person is identified, will return
            an empty array.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.IdentifyResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.ImageUrl.#ctor">
            <summary>
            Initializes a new instance of the ImageUrl class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.ImageUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageUrl class.
            </summary>
            <param name="url">Publicly reachable URL of an image</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.ImageUrl.Url">
            <summary>
            Gets or sets publicly reachable URL of an image
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.ImageUrl.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup">
            <summary>
            Properties describing present makeups on a given face.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup.#ctor">
            <summary>
            Initializes a new instance of the Makeup class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the Makeup class.
            </summary>
            <param name="eyeMakeup">A boolean value describing whether eye
            makeup is present on a face.</param>
            <param name="lipMakeup">A boolean value describing whether lip
            makeup is present on a face.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup.EyeMakeup">
            <summary>
            Gets or sets a boolean value describing whether eye makeup is
            present on a face.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Makeup.LipMakeup">
            <summary>
            Gets or sets a boolean value describing whether lip makeup is
            present on a face.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract">
            <summary>
            A combination of user defined name and user specified data for the
            person, personGroup, and faceList
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract.#ctor">
            <summary>
            Initializes a new instance of the NameAndUserDataContract class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the NameAndUserDataContract class.
            </summary>
            <param name="name">User defined name, maximum length is
            128.</param>
            <param name="userData">User specified data. Length should not
            exceed 16KB.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract.Name">
            <summary>
            Gets or sets user defined name, maximum length is 128.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract.UserData">
            <summary>
            Gets or sets user specified data. Length should not exceed 16KB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NameAndUserDataContract.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise">
            <summary>
            Properties describing noise level of the image.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise.#ctor">
            <summary>
            Initializes a new instance of the Noise class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.NoiseLevel,System.Double)">
            <summary>
            Initializes a new instance of the Noise class.
            </summary>
            <param name="noiseLevel">An enum value indicating level of noise.
            Possible values include: 'Low', 'Medium', 'High'</param>
            <param name="value">A number indicating level of noise level
            ranging from 0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is
            good exposure. [0.75, 1] is over exposure. [0, 0.3) is low noise
            level. [0.3, 0.7) is medium noise level. [0.7, 1] is high noise
            level.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise.NoiseLevel">
            <summary>
            Gets or sets an enum value indicating level of noise. Possible
            values include: 'Low', 'Medium', 'High'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Noise.Value">
            <summary>
            Gets or sets a number indicating level of noise level ranging from
            0 to 1. [0, 0.25) is under exposure. [0.25, 0.75) is good exposure.
            [0.75, 1] is over exposure. [0, 0.3) is low noise level. [0.3, 0.7)
            is medium noise level. [0.7, 1] is high noise level.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.NoiseLevel">
            <summary>
            Defines values for NoiseLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion">
            <summary>
            Properties describing occlusions on a given face.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion.#ctor">
            <summary>
            Initializes a new instance of the Occlusion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the Occlusion class.
            </summary>
            <param name="foreheadOccluded">A boolean value indicating whether
            forehead is occluded.</param>
            <param name="eyeOccluded">A boolean value indicating whether eyes
            are occluded.</param>
            <param name="mouthOccluded">A boolean value indicating whether the
            mouth is occluded.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion.ForeheadOccluded">
            <summary>
            Gets or sets a boolean value indicating whether forehead is
            occluded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion.EyeOccluded">
            <summary>
            Gets or sets a boolean value indicating whether eyes are occluded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Occlusion.MouthOccluded">
            <summary>
            Gets or sets a boolean value indicating whether the mouth is
            occluded.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace">
            <summary>
            PersonFace object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace.#ctor">
            <summary>
            Initializes a new instance of the PersistedFace class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the PersistedFace class.
            </summary>
            <param name="persistedFaceId">The persistedFaceId of the target
            face, which is persisted and will not expire. Different from faceId
            created by Face - Detect and will expire in 24 hours after the
            detection call.</param>
            <param name="userData">User-provided data attached to the face. The
            size limit is 1KB.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace.PersistedFaceId">
            <summary>
            Gets or sets the persistedFaceId of the target face, which is
            persisted and will not expire. Different from faceId created by
            Face - Detect and will expire in 24 hours after the detection call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace.UserData">
            <summary>
            Gets or sets user-provided data attached to the face. The size
            limit is 1KB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersistedFace.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person">
            <summary>
            Person object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person.#ctor">
            <summary>
            Initializes a new instance of the Person class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person.#ctor(System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Guid})">
            <summary>
            Initializes a new instance of the Person class.
            </summary>
            <param name="personId">PersonId of the target face list.</param>
            <param name="name">User defined name, maximum length is
            128.</param>
            <param name="userData">User specified data. Length should not
            exceed 16KB.</param>
            <param name="persistedFaceIds">PersistedFaceIds of registered faces
            in the person. These persistedFaceIds are returned from Person -
            Add a Person Face, and will not expire.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person.PersonId">
            <summary>
            Gets or sets personId of the target face list.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person.PersistedFaceIds">
            <summary>
            Gets or sets persistedFaceIds of registered faces in the person.
            These persistedFaceIds are returned from Person - Add a Person
            Face, and will not expire.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.Person.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersonGroup">
            <summary>
            Person group object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersonGroup.#ctor">
            <summary>
            Initializes a new instance of the PersonGroup class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersonGroup.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PersonGroup class.
            </summary>
            <param name="personGroupId">PersonGroupId of the existing person
            groups.</param>
            <param name="name">User defined name, maximum length is
            128.</param>
            <param name="userData">User specified data. Length should not
            exceed 16KB.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersonGroup.PersonGroupId">
            <summary>
            Gets or sets personGroupId of the existing person groups.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.PersonGroup.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace">
            <summary>
            Response body for find similar face operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.#ctor">
            <summary>
            Initializes a new instance of the SimilarFace class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.#ctor(System.Double,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the SimilarFace class.
            </summary>
            <param name="confidence">Similarity confidence of the candidate
            face. The higher confidence, the more similar. Range between
            [0,1].</param>
            <param name="faceId">FaceId of candidate face when find by faceIds.
            faceId is created by Face - Detect and will expire 24 hours after
            the detection call</param>
            <param name="persistedFaceId">PersistedFaceId of candidate face
            when find by faceListId. persistedFaceId in face list is persisted
            and will not expire. As showed in below response</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.FaceId">
            <summary>
            Gets or sets faceId of candidate face when find by faceIds. faceId
            is created by Face - Detect and will expire 24 hours after the
            detection call
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.PersistedFaceId">
            <summary>
            Gets or sets persistedFaceId of candidate face when find by
            faceListId. persistedFaceId in face list is persisted and will not
            expire. As showed in below response
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.Confidence">
            <summary>
            Gets or sets similarity confidence of the candidate face. The
            higher confidence, the more similar. Range between [0,1].
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.SimilarFace.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus">
            <summary>
            Training status object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.#ctor">
            <summary>
            Initializes a new instance of the TrainingStatus class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatusType,System.DateTime,System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the TrainingStatus class.
            </summary>
            <param name="status">Training status: notstarted, running,
            succeeded, failed. If the training process is waiting to perform,
            the status is notstarted. If the training is ongoing, the status is
            running. Status succeed means this person group is ready for Face -
            Identify. Status failed is often caused by no person or no
            persisted face exist in the person group. Possible values include:
            'nonstarted', 'running', 'succeeded', 'failed'</param>
            <param name="created">A combined UTC date and time string that
            describes person group created time.</param>
            <param name="lastAction">Person group last modify time in the UTC,
            could be null value when the person group is not successfully
            trained.</param>
            <param name="message">Show failure message when training failed
            (omitted when training succeed).</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.Status">
            <summary>
            Gets or sets training status: notstarted, running, succeeded,
            failed. If the training process is waiting to perform, the status
            is notstarted. If the training is ongoing, the status is running.
            Status succeed means this person group is ready for Face -
            Identify. Status failed is often caused by no person or no
            persisted face exist in the person group. Possible values include:
            'nonstarted', 'running', 'succeeded', 'failed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.Created">
            <summary>
            Gets or sets a combined UTC date and time string that describes
            person group created time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.LastAction">
            <summary>
            Gets or sets person group last modify time in the UTC, could be
            null value when the person group is not successfully trained.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.Message">
            <summary>
            Gets or sets show failure message when training failed (omitted
            when training succeed).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatus.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.TrainingStatusType">
            <summary>
            Defines values for TrainingStatusType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.UpdatePersonFaceRequest">
            <summary>
            Request to update person face data.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.UpdatePersonFaceRequest.#ctor">
            <summary>
            Initializes a new instance of the UpdatePersonFaceRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.UpdatePersonFaceRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UpdatePersonFaceRequest class.
            </summary>
            <param name="userData">User-provided data attached to the face. The
            size limit is 1KB.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.UpdatePersonFaceRequest.UserData">
            <summary>
            Gets or sets user-provided data attached to the face. The size
            limit is 1KB.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.UpdatePersonFaceRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest">
            <summary>
            Request body for verify operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest.#ctor">
            <summary>
            Initializes a new instance of the VerifyFaceToFaceRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the VerifyFaceToFaceRequest class.
            </summary>
            <param name="faceId1">FaceId of the first face, comes from Face -
            Detect</param>
            <param name="faceId2">FaceId of the second face, comes from Face -
            Detect</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest.FaceId1">
            <summary>
            Gets or sets faceId of the first face, comes from Face - Detect
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest.FaceId2">
            <summary>
            Gets or sets faceId of the second face, comes from Face - Detect
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToFaceRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest">
            <summary>
            Request body for verify operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.#ctor">
            <summary>
            Initializes a new instance of the VerifyFaceToPersonRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.#ctor(System.Guid,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the VerifyFaceToPersonRequest class.
            </summary>
            <param name="faceId">FaceId the face, comes from Face -
            Detect</param>
            <param name="personGroupId">Using existing personGroupId and
            personId for fast loading a specified person. personGroupId is
            created in Person Groups.Create.</param>
            <param name="personId">Specify a certain person in a person group.
            personId is created in Persons.Create.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.FaceId">
            <summary>
            Gets or sets faceId the face, comes from Face - Detect
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.PersonGroupId">
            <summary>
            Gets or sets using existing personGroupId and personId for fast
            loading a specified person. personGroupId is created in Person
            Groups.Create.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.PersonId">
            <summary>
            Gets or sets specify a certain person in a person group. personId
            is created in Persons.Create.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyFaceToPersonRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult">
            <summary>
            Result of the verify operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult.#ctor">
            <summary>
            Initializes a new instance of the VerifyResult class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult.#ctor(System.Boolean,System.Double)">
            <summary>
            Initializes a new instance of the VerifyResult class.
            </summary>
            <param name="isIdentical">True if the two faces belong to the same
            person or the face belongs to the person, otherwise false.</param>
            <param name="confidence">A number indicates the similarity
            confidence of whether two faces belong to the same person, or
            whether the face belongs to the person. By default, isIdentical is
            set to True if similarity confidence is greater than or equal to
            0.5. This is useful for advanced users to override "isIdentical"
            and fine-tune the result on their own data.</param>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult.IsIdentical">
            <summary>
            Gets or sets true if the two faces belong to the same person or the
            face belongs to the person, otherwise false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult.Confidence">
            <summary>
            Gets or sets a number indicates the similarity confidence of
            whether two faces belong to the same person, or whether the face
            belongs to the person. By default, isIdentical is set to True if
            similarity confidence is greater than or equal to 0.5. This is
            useful for advanced users to override "isIdentical" and fine-tune
            the result on their own data.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.Models.VerifyResult.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations">
            <summary>
            PersonGroupOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient)">
            <summary>
            Initializes a new instance of the PersonGroupOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.Client">
            <summary>
            Gets a reference to the FaceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a new person group with specified personGroupId, name and
            user-provided userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.DeleteWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing person group. Persisted face images of all people in the
            person group will also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.GetWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve the information of a person group, including its name and
            userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing person group's display name and userData. The properties
            which does not appear in request body will not be updated.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.GetTrainingStatusWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve the training status of a person group (completed or ongoing).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.ListWithHttpMessagesAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List person groups and their information.
            </summary>
            <param name='start'>
            List person groups from the least personGroupId greater than the "start".
            </param>
            <param name='top'>
            The number of person groups to list.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperations.TrainWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Queue a person group training task, the training task may not be started
            immediately.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions">
            <summary>
            Extension methods for PersonGroupOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.CreateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new person group with specified personGroupId, name and
            user-provided userData.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.DeleteAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an existing person group. Persisted face images of all people in the
            person group will also be deleted.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.GetAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the information of a person group, including its name and
            userData.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.UpdateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update an existing person group's display name and userData. The properties
            which does not appear in request body will not be updated.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.GetTrainingStatusAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve the training status of a person group (completed or ongoing).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.ListAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List person groups and their information.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='start'>
            List person groups from the least personGroupId greater than the "start".
            </param>
            <param name='top'>
            The number of person groups to list.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupOperationsExtensions.TrainAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Queue a person group training task, the training task may not be started
            immediately.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson">
            <summary>
            PersonGroupPerson operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.#ctor(Microsoft.Azure.CognitiveServices.Vision.Face.FaceClient)">
            <summary>
            Initializes a new instance of the PersonGroupPerson class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.Client">
            <summary>
            Gets a reference to the FaceClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create a new person in a specified person group.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all persons in a person group, and retrieve person information
            (including personId, name, userData and persistedFaceIds of registered
            faces of the person).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='start'>
            Starting person id to return (used to list a range of persons).
            </param>
            <param name='top'>
            Number of persons to return starting with the person id indicated by the
            'start' parameter.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.DeleteWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete an existing person from a person group. Persisted face images of the
            person will also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.GetWithHttpMessagesAsync(System.String,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a person's information, including registered persisted faces, name
            and userData.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.UpdateWithHttpMessagesAsync(System.String,System.Guid,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update name or userData of a person.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.DeleteFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Delete a face from a person. Relative image for the persisted face will
            also be deleted.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.GetFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a persisted face (specified by persistedFaceId,
            personId and its belonging personGroupId).
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.UpdateFaceWithHttpMessagesAsync(System.String,System.Guid,System.Guid,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update a person persisted face's userData field.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='userData'>
            User-provided data attached to the face. The size limit is 1KB.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.AddPersonFaceFromUrlWithHttpMessagesAsync(System.String,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input face is
            specified as an image with a targetFace rectangle.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPerson.AddPersonFaceFromStreamWithHttpMessagesAsync(System.String,System.Guid,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input face is
            specified as an image with a targetFace rectangle.
            </summary>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.CognitiveServices.Vision.Face.Models.APIErrorException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions">
            <summary>
            Extension methods for PersonGroupPerson.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.CreateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Create a new person in a specified person group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.ListAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            List all persons in a person group, and retrieve person information
            (including personId, name, userData and persistedFaceIds of registered
            faces of the person).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='start'>
            Starting person id to return (used to list a range of persons).
            </param>
            <param name='top'>
            Number of persons to return starting with the person id indicated by the
            'start' parameter.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.DeleteAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an existing person from a person group. Persisted face images of the
            person will also be deleted.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.GetAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve a person's information, including registered persisted faces, name
            and userData.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.UpdateAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Update name or userData of a person.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='name'>
            User defined name, maximum length is 128.
            </param>
            <param name='userData'>
            User specified data. Length should not exceed 16KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.DeleteFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete a face from a person. Relative image for the persisted face will
            also be deleted.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.GetFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Retrieve information about a persisted face (specified by persistedFaceId,
            personId and its belonging personGroupId).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.UpdateFaceAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.Guid,System.String,System.Threading.CancellationToken)">
            <summary>
            Update a person persisted face's userData field.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='persistedFaceId'>
            Id referencing a particular persistedFaceId of an existing face.
            </param>
            <param name='userData'>
            User-provided data attached to the face. The size limit is 1KB.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.AddPersonFaceFromUrlAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.String,System.String,System.Collections.Generic.IList{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input face is
            specified as an image with a targetFace rectangle.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='url'>
            Publicly reachable URL of an image
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.CognitiveServices.Vision.Face.PersonGroupPersonExtensions.AddPersonFaceFromStreamAsync(Microsoft.Azure.CognitiveServices.Vision.Face.IPersonGroupPerson,System.String,System.Guid,System.IO.Stream,System.String,System.Collections.Generic.IList{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Add a representative face to a person for identification. The input face is
            specified as an image with a targetFace rectangle.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='personGroupId'>
            Id referencing a particular person group.
            </param>
            <param name='personId'>
            Id referencing a particular person.
            </param>
            <param name='image'>
            An image stream.
            </param>
            <param name='userData'>
            User-specified data about the face for any purpose. The maximum length is
            1KB.
            </param>
            <param name='targetFace'>
            A face rectangle to specify the target face to be added to a person in the
            format of "targetFace=left,top,width,height". E.g.
            "targetFace=10,10,100,100". If there is more than one face in the image,
            targetFace is required to specify which face to add. No targetFace means
            there is only one face detected in the entire image.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
